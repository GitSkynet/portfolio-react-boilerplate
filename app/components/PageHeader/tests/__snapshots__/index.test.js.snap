// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PageHeader /> should adopt any children 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PageHeader
    isLeftHanded={true}
>
    <div>
        children
    </div>
</PageHeader>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <SpeechBubble
        arrowHeight="4vh"
        backgroundColor="#575756"
        isLeftHanded={true}
        showArrowBreakpoint="750px"
>
        <H2__H2>
                <div>
                        children
                </div>
        </H2__H2>
</SpeechBubble>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "arrowHeight": "4vh",
        "backgroundColor": "#575756",
        "children": <H2__H2>
          <div>
                    children
          </div>
</H2__H2>,
        "isLeftHanded": true,
        "showArrowBreakpoint": "750px",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div>
            children
</div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "children",
          },
          "ref": null,
          "rendered": "children",
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <SpeechBubble
          arrowHeight="4vh"
          backgroundColor="#575756"
          isLeftHanded={true}
          showArrowBreakpoint="750px"
>
          <H2__H2>
                    <div>
                              children
                    </div>
          </H2__H2>
</SpeechBubble>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "arrowHeight": "4vh",
          "backgroundColor": "#575756",
          "children": <H2__H2>
            <div>
                        children
            </div>
</H2__H2>,
          "isLeftHanded": true,
          "showArrowBreakpoint": "750px",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div>
              children
</div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "children",
            },
            "ref": null,
            "rendered": "children",
            "type": "div",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<PageHeader /> should render and match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PageHeader
    isLeftHanded={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <SpeechBubble
        arrowHeight="4vh"
        backgroundColor="#575756"
        isLeftHanded={true}
        showArrowBreakpoint="750px"
>
        <H2__H2 />
</SpeechBubble>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "arrowHeight": "4vh",
        "backgroundColor": "#575756",
        "children": <H2__H2 />,
        "isLeftHanded": true,
        "showArrowBreakpoint": "750px",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <SpeechBubble
          arrowHeight="4vh"
          backgroundColor="#575756"
          isLeftHanded={true}
          showArrowBreakpoint="750px"
>
          <H2__H2 />
</SpeechBubble>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "arrowHeight": "4vh",
          "backgroundColor": "#575756",
          "children": <H2__H2 />,
          "isLeftHanded": true,
          "showArrowBreakpoint": "750px",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
