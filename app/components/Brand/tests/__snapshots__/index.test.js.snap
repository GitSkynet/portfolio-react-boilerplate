// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Brand should render and match the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Wrapper__Wrapper>
    <BrandLink__BrandLink
        href="/"
    >
        <Media
            bodyAlign="middle"
            imageAlign="middle"
            imageAlt="logo"
            imageHeight="45px"
            imageSource="IMAGE_MOCK"
            imageWidth="45px"
            spacing="0"
        >
            JOHAN MEESTER
        </Media>
    </BrandLink__BrandLink>
</Wrapper__Wrapper>,
  "nodes": Array [
    <Wrapper__Wrapper>
      <BrandLink__BrandLink
            href="/"
      >
            <Media
                  bodyAlign="middle"
                  imageAlign="middle"
                  imageAlt="logo"
                  imageHeight="45px"
                  imageSource="IMAGE_MOCK"
                  imageWidth="45px"
                  spacing="0"
            >
                  JOHAN MEESTER
            </Media>
      </BrandLink__BrandLink>
</Wrapper__Wrapper>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Brand
        href="/"
        imageSource="IMAGE_MOCK"
        text="JOHAN MEESTER"
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "href": "/",
          "imageSource": "IMAGE_MOCK",
          "text": "JOHAN MEESTER",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Wrapper__Wrapper>
          <BrandLink__BrandLink
                    href="/"
          >
                    <Media
                              bodyAlign="middle"
                              imageAlign="middle"
                              imageAlt="logo"
                              imageHeight="45px"
                              imageSource="IMAGE_MOCK"
                              imageWidth="45px"
                              spacing="0"
                    >
                              JOHAN MEESTER
                    </Media>
          </BrandLink__BrandLink>
</Wrapper__Wrapper>,
        "_debugID": 2,
        "_renderedOutput": <Wrapper__Wrapper>
          <BrandLink__BrandLink
                    href="/"
          >
                    <Media
                              bodyAlign="middle"
                              imageAlign="middle"
                              imageAlt="logo"
                              imageHeight="45px"
                              imageSource="IMAGE_MOCK"
                              imageWidth="45px"
                              spacing="0"
                    >
                              JOHAN MEESTER
                    </Media>
          </BrandLink__BrandLink>
</Wrapper__Wrapper>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Brand
    href="/"
    imageSource="IMAGE_MOCK"
    text="JOHAN MEESTER"
/>,
}
`;
