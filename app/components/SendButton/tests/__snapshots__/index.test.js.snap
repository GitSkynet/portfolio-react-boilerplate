// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SendButton should render and match the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Button__Button
    disabled={true}
>
    <span>
        <ButtonIcon__ButtonIcon
            name="paper-plane"
        />
        <span>
            <FormattedMessage
                defaultMessage="Send"
                id="portfolio.components.SendButton.idle"
                values={Object {}}
            />
        </span>
    </span>
</Button__Button>,
  "nodes": Array [
    <Button__Button
      disabled={true}
>
      <span>
            <ButtonIcon__ButtonIcon
                  name="paper-plane"
            />
            <span>
                  <FormattedMessage
                        defaultMessage="Send"
                        id="portfolio.components.SendButton.idle"
                        values={Object {}}
                  />
            </span>
      </span>
</Button__Button>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <SendButton
        buttonState="idle"
        disabled={true}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "buttonState": "idle",
          "disabled": true,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Button__Button
          disabled={true}
>
          <span>
                    <ButtonIcon__ButtonIcon
                              name="paper-plane"
                    />
                    <span>
                              <FormattedMessage
                                        defaultMessage="Send"
                                        id="portfolio.components.SendButton.idle"
                                        values={Object {}}
                              />
                    </span>
          </span>
</Button__Button>,
        "_debugID": 2,
        "_renderedOutput": <Button__Button
          disabled={true}
>
          <span>
                    <ButtonIcon__ButtonIcon
                              name="paper-plane"
                    />
                    <span>
                              <FormattedMessage
                                        defaultMessage="Send"
                                        id="portfolio.components.SendButton.idle"
                                        values={Object {}}
                              />
                    </span>
          </span>
</Button__Button>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SendButton
    buttonState="idle"
    disabled={true}
/>,
}
`;

exports[`SendButton should respond when set to \`enabled\` 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Button__Button
    disabled={false}
>
    <span>
        <ButtonIcon__ButtonIcon
            name="paper-plane"
        />
        <span>
            <FormattedMessage
                defaultMessage="Send"
                id="portfolio.components.SendButton.idle"
                values={Object {}}
            />
        </span>
    </span>
</Button__Button>,
  "nodes": Array [
    <Button__Button
      disabled={false}
>
      <span>
            <ButtonIcon__ButtonIcon
                  name="paper-plane"
            />
            <span>
                  <FormattedMessage
                        defaultMessage="Send"
                        id="portfolio.components.SendButton.idle"
                        values={Object {}}
                  />
            </span>
      </span>
</Button__Button>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <SendButton
        buttonState="idle"
        disabled={false}
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "buttonState": "idle",
          "disabled": false,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Button__Button
          disabled={false}
>
          <span>
                    <ButtonIcon__ButtonIcon
                              name="paper-plane"
                    />
                    <span>
                              <FormattedMessage
                                        defaultMessage="Send"
                                        id="portfolio.components.SendButton.idle"
                                        values={Object {}}
                              />
                    </span>
          </span>
</Button__Button>,
        "_debugID": 4,
        "_renderedOutput": <Button__Button
          disabled={false}
>
          <span>
                    <ButtonIcon__ButtonIcon
                              name="paper-plane"
                    />
                    <span>
                              <FormattedMessage
                                        defaultMessage="Send"
                                        id="portfolio.components.SendButton.idle"
                                        values={Object {}}
                              />
                    </span>
          </span>
</Button__Button>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SendButton
    buttonState="idle"
    disabled={false}
/>,
}
`;

exports[`SendButton when the \`state\` changes should change its appearance when state is \`error\` 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Button__Button
    disabled={false}
>
    <span>
        <ButtonIcon__ButtonIcon
            name="paper-plane"
        />
        <span>
            <FormattedMessage
                defaultMessage="Failed. Please try again"
                id="portfolio.components.SendButton.error"
                values={Object {}}
            />
        </span>
    </span>
</Button__Button>,
  "nodes": Array [
    <Button__Button
      disabled={false}
>
      <span>
            <ButtonIcon__ButtonIcon
                  name="paper-plane"
            />
            <span>
                  <FormattedMessage
                        defaultMessage="Failed. Please try again"
                        id="portfolio.components.SendButton.error"
                        values={Object {}}
                  />
            </span>
      </span>
</Button__Button>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <SendButton
        buttonState="error"
        disabled={false}
/>,
      "_debugID": 9,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "buttonState": "error",
          "disabled": false,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 5,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Button__Button
          disabled={false}
>
          <span>
                    <ButtonIcon__ButtonIcon
                              name="paper-plane"
                    />
                    <span>
                              <FormattedMessage
                                        defaultMessage="Failed. Please try again"
                                        id="portfolio.components.SendButton.error"
                                        values={Object {}}
                              />
                    </span>
          </span>
</Button__Button>,
        "_debugID": 10,
        "_renderedOutput": <Button__Button
          disabled={false}
>
          <span>
                    <ButtonIcon__ButtonIcon
                              name="paper-plane"
                    />
                    <span>
                              <FormattedMessage
                                        defaultMessage="Failed. Please try again"
                                        id="portfolio.components.SendButton.error"
                                        values={Object {}}
                              />
                    </span>
          </span>
</Button__Button>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SendButton
    buttonState="error"
    disabled={false}
/>,
}
`;

exports[`SendButton when the \`state\` changes should change its appearance when state is \`sending\` 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Button__Button
    disabled={false}
>
    <span>
        <ButtonIcon__ButtonIcon
            name="paper-plane"
        />
        <span>
            <FormattedMessage
                defaultMessage="Sending..."
                id="portfolio.components.SendButton.sending"
                values={Object {}}
            />
        </span>
    </span>
</Button__Button>,
  "nodes": Array [
    <Button__Button
      disabled={false}
>
      <span>
            <ButtonIcon__ButtonIcon
                  name="paper-plane"
            />
            <span>
                  <FormattedMessage
                        defaultMessage="Sending..."
                        id="portfolio.components.SendButton.sending"
                        values={Object {}}
                  />
            </span>
      </span>
</Button__Button>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <SendButton
        buttonState="sending"
        disabled={false}
/>,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "buttonState": "sending",
          "disabled": false,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Button__Button
          disabled={false}
>
          <span>
                    <ButtonIcon__ButtonIcon
                              name="paper-plane"
                    />
                    <span>
                              <FormattedMessage
                                        defaultMessage="Sending..."
                                        id="portfolio.components.SendButton.sending"
                                        values={Object {}}
                              />
                    </span>
          </span>
</Button__Button>,
        "_debugID": 6,
        "_renderedOutput": <Button__Button
          disabled={false}
>
          <span>
                    <ButtonIcon__ButtonIcon
                              name="paper-plane"
                    />
                    <span>
                              <FormattedMessage
                                        defaultMessage="Sending..."
                                        id="portfolio.components.SendButton.sending"
                                        values={Object {}}
                              />
                    </span>
          </span>
</Button__Button>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SendButton
    buttonState="sending"
    disabled={false}
/>,
}
`;

exports[`SendButton when the \`state\` changes should change its appearance when state is \`success\` 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Button__Button
    disabled={false}
>
    <span>
        <ButtonIcon__ButtonIcon
            name="paper-plane"
        />
        <span>
            <FormattedMessage
                defaultMessage="Sent! I'll respond as soon as possible"
                id="portfolio.components.SendButton.success"
                values={Object {}}
            />
        </span>
    </span>
</Button__Button>,
  "nodes": Array [
    <Button__Button
      disabled={false}
>
      <span>
            <ButtonIcon__ButtonIcon
                  name="paper-plane"
            />
            <span>
                  <FormattedMessage
                        defaultMessage="Sent! I'll respond as soon as possible"
                        id="portfolio.components.SendButton.success"
                        values={Object {}}
                  />
            </span>
      </span>
</Button__Button>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <SendButton
        buttonState="success"
        disabled={false}
/>,
      "_debugID": 7,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "buttonState": "success",
          "disabled": false,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 4,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Button__Button
          disabled={false}
>
          <span>
                    <ButtonIcon__ButtonIcon
                              name="paper-plane"
                    />
                    <span>
                              <FormattedMessage
                                        defaultMessage="Sent! I'll respond as soon as possible"
                                        id="portfolio.components.SendButton.success"
                                        values={Object {}}
                              />
                    </span>
          </span>
</Button__Button>,
        "_debugID": 8,
        "_renderedOutput": <Button__Button
          disabled={false}
>
          <span>
                    <ButtonIcon__ButtonIcon
                              name="paper-plane"
                    />
                    <span>
                              <FormattedMessage
                                        defaultMessage="Sent! I'll respond as soon as possible"
                                        id="portfolio.components.SendButton.success"
                                        values={Object {}}
                              />
                    </span>
          </span>
</Button__Button>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SendButton
    buttonState="success"
    disabled={false}
/>,
}
`;
