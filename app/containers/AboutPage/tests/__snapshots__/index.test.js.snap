// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AboutPage /> should render and match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AboutPage
    getContent={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
>
          <title>
                    Over mij
          </title>
          <meta
                    content="Over mij pagina van Johan Meester zijn portfolio"
                    name="description"
          />
</HelmetWrapper>,
        <Unknown />,
      ],
      "loadingContent": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <title>
              Over mij
</title>,
            <meta
              content="Over mij pagina van Johan Meester zijn portfolio"
              name="description"
/>,
          ],
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Over mij",
            },
            "ref": null,
            "rendered": "Over mij",
            "type": "title",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "Over mij pagina van Johan Meester zijn portfolio",
              "name": "description",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": Symbol(react.fragment),
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
>
            <title>
                        Over mij
            </title>
            <meta
                        content="Over mij pagina van Johan Meester zijn portfolio"
                        name="description"
            />
</HelmetWrapper>,
          <Unknown />,
        ],
        "loadingContent": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <title>
                Over mij
</title>,
              <meta
                content="Over mij pagina van Johan Meester zijn portfolio"
                name="description"
/>,
            ],
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Over mij",
              },
              "ref": null,
              "rendered": "Over mij",
              "type": "title",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Over mij pagina van Johan Meester zijn portfolio",
                "name": "description",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": Symbol(react.fragment),
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<AboutPage /> should show an error message when content could not be loaded 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "injectedReducers": Object {},
      "injectedSagas": Object {},
      "replaceReducer": [Function],
      "runSaga": [Function],
      "subscribe": [Function],
      Symbol(Symbol.observable): [Function],
    }
  }
>
  <IntlProvider
    locale="en"
  >
    <AboutPage
      error={true}
      getContent={[Function]}
    >
      <Article
        loadingContent={false}
      >
        <StyledArticle__StyledArticle
          loadingContent={false}
        >
          <article
            className="StyledArticle__StyledArticle-lfVOCZ bjDVJJ"
          >
            <HelmetWrapper
              defer={true}
              encodeSpecialCharacters={true}
            >
              <SideEffect(NullComponent)
                defer={true}
                encodeSpecialCharacters={true}
                meta={
                  Array [
                    Object {
                      "content": "Over mij pagina van Johan Meester zijn portfolio",
                      "name": "description",
                    },
                  ]
                }
                title="Over mij"
                titleAttributes={Object {}}
              >
                <NullComponent
                  defer={true}
                  encodeSpecialCharacters={true}
                  meta={
                    Array [
                      Object {
                        "content": "Over mij pagina van Johan Meester zijn portfolio",
                        "name": "description",
                      },
                    ]
                  }
                  title="Over mij"
                  titleAttributes={Object {}}
                />
              </SideEffect(NullComponent)>
            </HelmetWrapper>
            <ContentLoadingIndicator
              show={true}
              showError={true}
            >
              <ContentLoadingIndicator
                show={true}
                showError={true}
              >
                <Article__Article
                  show={true}
                >
                  <article
                    className="Article__Article-fWCsyc gvdoiC"
                  >
                    <Header>
                      <header>
                        <SpeechBubble
                          arrowHeight="4vh"
                          backgroundColor="#575756"
                          isLeftHanded={false}
                          showArrowBreakpoint="750px"
                        >
                          <Container__Container
                            showArrowBreakpoint="750px"
                          >
                            <div
                              className="Container__Container-duRnZL clqGHe"
                            >
                              <Bubble__Bubble
                                backgroundColor="#575756"
                                isLeftHanded={false}
                                showArrowBreakpoint="750px"
                              >
                                <div
                                  className="Bubble__Bubble-kfMqWC eGwfKo"
                                >
                                  <Content__Content>
                                    <div
                                      className="Content__Content-bIVvry htHIBE"
                                    >
                                      <H2__H2
                                        isError={true}
                                      >
                                        <h2
                                          className="H2__H2-eTwhUa jyWhhz"
                                        >
                                          <FormattedMessage
                                            defaultMessage="Terribly sorry, but the page cannot be loaded at this time"
                                            id="portfolio.containers.ContentLoadingIndicator.error"
                                            values={Object {}}
                                          >
                                            <span>
                                              Terribly sorry, but the page cannot be loaded at this time
                                            </span>
                                          </FormattedMessage>
                                        </h2>
                                      </H2__H2>
                                      <FontAwesome
                                        name="chain-broken"
                                        pulse={false}
                                        size="2x"
                                      >
                                        <span
                                          aria-hidden={true}
                                          className="fa fa-chain-broken fa-2x"
                                        />
                                      </FontAwesome>
                                    </div>
                                  </Content__Content>
                                </div>
                              </Bubble__Bubble>
                              <Arrow__Arrow
                                height="4vh"
                                isLeftHanded={false}
                                showBreakpoint="750px"
                              >
                                <svg
                                  className="Arrow__Arrow-fPzAjH hweUFf"
                                  height="4vh"
                                  preserveAspectRatio="xMinYMid"
                                  viewBox="0 427.9 175.1 132.1"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M0 427.9l175.1 65.7-43.7-65.7z"
                                    fill="#71716f"
                                    stroke="#71716f"
                                  />
                                  <path
                                    d="M175.1 493.6l-87.5 21.9v-54.8"
                                    fill="#575756"
                                  />
                                  <path
                                    d="M87.6 515.5l21.2 44.5v-49.8"
                                    fill="#71716f"
                                  />
                                </svg>
                              </Arrow__Arrow>
                            </div>
                          </Container__Container>
                        </SpeechBubble>
                      </header>
                    </Header>
                  </article>
                </Article__Article>
              </ContentLoadingIndicator>
            </ContentLoadingIndicator>
          </article>
        </StyledArticle__StyledArticle>
      </Article>
    </AboutPage>
  </IntlProvider>
</Provider>
`;

exports[`<AboutPage /> should show the fetched content 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "injectedReducers": Object {},
      "injectedSagas": Object {},
      "replaceReducer": [Function],
      "runSaga": [Function],
      "subscribe": [Function],
      Symbol(Symbol.observable): [Function],
    }
  }
>
  <IntlProvider
    locale="en"
  >
    <AboutPage
      aboutMeText="<p>Test Content<br>New Line</p>
    "
      error={false}
      getContent={[Function]}
      isLoading={false}
    >
      <Article
        loadingContent={false}
      >
        <StyledArticle__StyledArticle
          loadingContent={false}
        >
          <article
            className="StyledArticle__StyledArticle-lfVOCZ bjDVJJ"
          >
            <HelmetWrapper
              defer={true}
              encodeSpecialCharacters={true}
            >
              <SideEffect(NullComponent)
                defer={true}
                encodeSpecialCharacters={true}
                meta={
                  Array [
                    Object {
                      "content": "Over mij pagina van Johan Meester zijn portfolio",
                      "name": "description",
                    },
                  ]
                }
                title="Over mij"
                titleAttributes={Object {}}
              >
                <NullComponent
                  defer={true}
                  encodeSpecialCharacters={true}
                  meta={
                    Array [
                      Object {
                        "content": "Over mij pagina van Johan Meester zijn portfolio",
                        "name": "description",
                      },
                    ]
                  }
                  title="Over mij"
                  titleAttributes={Object {}}
                />
              </SideEffect(NullComponent)>
            </HelmetWrapper>
            <PageContent
              content="<p>Test Content<br>New Line</p>
            "
              title={
                <FormattedMessage
                  defaultMessage="ABOUT ME"
                  id="portfolio.page.AboutPage.title"
                  values={Object {}}
                />
              }
            >
              <Wrapper__Wrapper
                animate={true}
              >
                <div
                  className="Wrapper__Wrapper-fEDTQp jleZGF"
                >
                  <FlexRow__FlexRow>
                    <div
                      className="FlexRow__FlexRow-eMDfJs boglzG"
                    >
                      <FlexColumn__FlexColumn>
                        <div
                          className="FlexColumn__FlexColumn-hijLdf kQZWVb"
                        >
                          <PageHeader
                            isLeftHanded={true}
                          >
                            <StyledHeader__StyledHeader>
                              <header
                                className="StyledHeader__StyledHeader-kHWYFT jdEqBZ"
                              >
                                <SpeechBubble
                                  arrowHeight="4vh"
                                  backgroundColor="#465a65"
                                  isLeftHanded={true}
                                  makeAppear={true}
                                  showArrowBreakpoint="750px"
                                >
                                  <Container__Container
                                    makeAppear={true}
                                    showArrowBreakpoint="750px"
                                  >
                                    <div
                                      className="Container__Container-duRnZL bvdzbA"
                                    >
                                      <Bubble__Bubble
                                        backgroundColor="#465a65"
                                        isLeftHanded={true}
                                        showArrowBreakpoint="750px"
                                      >
                                        <div
                                          className="Bubble__Bubble-kfMqWC imiJUC"
                                        >
                                          <H2__H2>
                                            <h2
                                              className="H2__H2-eTwhUa gXBZsx"
                                            >
                                              <FormattedMessage
                                                defaultMessage="ABOUT ME"
                                                id="portfolio.page.AboutPage.title"
                                                values={Object {}}
                                              >
                                                <span>
                                                  ABOUT ME
                                                </span>
                                              </FormattedMessage>
                                            </h2>
                                          </H2__H2>
                                        </div>
                                      </Bubble__Bubble>
                                      <Arrow__Arrow
                                        height="4vh"
                                        isLeftHanded={true}
                                        showBreakpoint="750px"
                                      >
                                        <svg
                                          className="Arrow__Arrow-fPzAjH iYMpKn"
                                          height="4vh"
                                          preserveAspectRatio="xMinYMid"
                                          viewBox="0 427.9 175.1 132.1"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M0 427.9l175.1 65.7-43.7-65.7z"
                                            fill="#5b7583"
                                            stroke="#5b7583"
                                          />
                                          <path
                                            d="M175.1 493.6l-87.5 21.9v-54.8"
                                            fill="#465a65"
                                          />
                                          <path
                                            d="M87.6 515.5l21.2 44.5v-49.8"
                                            fill="#5b7583"
                                          />
                                        </svg>
                                      </Arrow__Arrow>
                                    </div>
                                  </Container__Container>
                                </SpeechBubble>
                              </header>
                            </StyledHeader__StyledHeader>
                          </PageHeader>
                        </div>
                      </FlexColumn__FlexColumn>
                    </div>
                  </FlexRow__FlexRow>
                  <FlexRow__FlexRow>
                    <div
                      className="FlexRow__FlexRow-eMDfJs boglzG"
                    >
                      <FlexColumn__FlexColumn>
                        <div
                          className="FlexColumn__FlexColumn-hijLdf kQZWVb"
                        >
                          <SpeechBubble
                            arrowHeight="9vh"
                            backgroundColor="#f90"
                            isLeftHanded={false}
                            makeAppear={false}
                            maxWidth="940px"
                            showArrowBreakpoint="750px"
                          >
                            <Container__Container
                              makeAppear={false}
                              maxWidth="940px"
                              showArrowBreakpoint="750px"
                            >
                              <div
                                className="Container__Container-duRnZL fKOTCV"
                              >
                                <Bubble__Bubble
                                  backgroundColor="#f90"
                                  isLeftHanded={false}
                                  showArrowBreakpoint="750px"
                                >
                                  <div
                                    className="Bubble__Bubble-kfMqWC fhhlIz"
                                  >
                                    &lt;p&gt;Test Content&lt;br&gt;New Line&lt;/p&gt;
                                    
                                  </div>
                                </Bubble__Bubble>
                                <Arrow__Arrow
                                  height="9vh"
                                  isLeftHanded={false}
                                  showBreakpoint="750px"
                                >
                                  <svg
                                    className="Arrow__Arrow-fPzAjH jaunCJ"
                                    height="9vh"
                                    preserveAspectRatio="xMinYMid"
                                    viewBox="0 427.9 175.1 132.1"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M0 427.9l175.1 65.7-43.7-65.7z"
                                      fill="#ffad33"
                                      stroke="#ffad33"
                                    />
                                    <path
                                      d="M175.1 493.6l-87.5 21.9v-54.8"
                                      fill="#f90"
                                    />
                                    <path
                                      d="M87.6 515.5l21.2 44.5v-49.8"
                                      fill="#ffad33"
                                    />
                                  </svg>
                                </Arrow__Arrow>
                              </div>
                            </Container__Container>
                          </SpeechBubble>
                        </div>
                      </FlexColumn__FlexColumn>
                    </div>
                  </FlexRow__FlexRow>
                </div>
              </Wrapper__Wrapper>
            </PageContent>
          </article>
        </StyledArticle__StyledArticle>
      </Article>
    </AboutPage>
  </IntlProvider>
</Provider>
`;
