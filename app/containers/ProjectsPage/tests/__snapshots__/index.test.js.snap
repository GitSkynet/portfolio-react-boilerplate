// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProjectsPage /> Expect to render and match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProjectsPage
    getContent={[Function]}
    projects={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
>
          <title>
                    Mijn projected
          </title>
          <meta
                    content="Mijn projecten pagina van Johan Meester zijn portfolio"
                    name="description"
          />
</HelmetWrapper>,
        <Styled(RowContainer)
          tagName="div"
>
          <Breakpoints>
                    <PageHeader
                              isLeftHanded={true}
                    >
                              <FormattedMessage
                                        defaultMessage="MY PROJECTS"
                                        id="portfolio.page.projects.title"
                                        values={Object {}}
                              />
                    </PageHeader>
          </Breakpoints>
</Styled(RowContainer)>,
        <Styled(RowContainer)
          tagName="div"
>
          <Breakpoints>
                    <ProjectsList__ProjectsList>
                              
                    </ProjectsList__ProjectsList>
          </Breakpoints>
</Styled(RowContainer)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <title>
              Mijn projected
</title>,
            <meta
              content="Mijn projecten pagina van Johan Meester zijn portfolio"
              name="description"
/>,
          ],
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Mijn projected",
            },
            "ref": null,
            "rendered": "Mijn projected",
            "type": "title",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "Mijn projecten pagina van Johan Meester zijn portfolio",
              "name": "description",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Breakpoints>
            <PageHeader
                        isLeftHanded={true}
            >
                        <FormattedMessage
                                    defaultMessage="MY PROJECTS"
                                    id="portfolio.page.projects.title"
                                    values={Object {}}
                        />
            </PageHeader>
</Breakpoints>,
          "tagName": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <PageHeader
              isLeftHanded={true}
>
              <FormattedMessage
                            defaultMessage="MY PROJECTS"
                            id="portfolio.page.projects.title"
                            values={Object {}}
              />
</PageHeader>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <FormattedMessage
                defaultMessage="MY PROJECTS"
                id="portfolio.page.projects.title"
                values={Object {}}
/>,
              "isLeftHanded": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultMessage": "MY PROJECTS",
                "id": "portfolio.page.projects.title",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Breakpoints>
            <ProjectsList__ProjectsList>
                        
            </ProjectsList__ProjectsList>
</Breakpoints>,
          "tagName": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <ProjectsList__ProjectsList>
              
</ProjectsList__ProjectsList>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [],
            },
            "ref": null,
            "rendered": Array [],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
>
            <title>
                        Mijn projected
            </title>
            <meta
                        content="Mijn projecten pagina van Johan Meester zijn portfolio"
                        name="description"
            />
</HelmetWrapper>,
          <Styled(RowContainer)
            tagName="div"
>
            <Breakpoints>
                        <PageHeader
                                    isLeftHanded={true}
                        >
                                    <FormattedMessage
                                                defaultMessage="MY PROJECTS"
                                                id="portfolio.page.projects.title"
                                                values={Object {}}
                                    />
                        </PageHeader>
            </Breakpoints>
</Styled(RowContainer)>,
          <Styled(RowContainer)
            tagName="div"
>
            <Breakpoints>
                        <ProjectsList__ProjectsList>
                                    
                        </ProjectsList__ProjectsList>
            </Breakpoints>
</Styled(RowContainer)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <title>
                Mijn projected
</title>,
              <meta
                content="Mijn projecten pagina van Johan Meester zijn portfolio"
                name="description"
/>,
            ],
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Mijn projected",
              },
              "ref": null,
              "rendered": "Mijn projected",
              "type": "title",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Mijn projecten pagina van Johan Meester zijn portfolio",
                "name": "description",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Breakpoints>
              <PageHeader
                            isLeftHanded={true}
              >
                            <FormattedMessage
                                          defaultMessage="MY PROJECTS"
                                          id="portfolio.page.projects.title"
                                          values={Object {}}
                            />
              </PageHeader>
</Breakpoints>,
            "tagName": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <PageHeader
                isLeftHanded={true}
>
                <FormattedMessage
                                defaultMessage="MY PROJECTS"
                                id="portfolio.page.projects.title"
                                values={Object {}}
                />
</PageHeader>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <FormattedMessage
                  defaultMessage="MY PROJECTS"
                  id="portfolio.page.projects.title"
                  values={Object {}}
/>,
                "isLeftHanded": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultMessage": "MY PROJECTS",
                  "id": "portfolio.page.projects.title",
                  "values": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Breakpoints>
              <ProjectsList__ProjectsList>
                            
              </ProjectsList__ProjectsList>
</Breakpoints>,
            "tagName": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <ProjectsList__ProjectsList>
                
</ProjectsList__ProjectsList>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [],
              },
              "ref": null,
              "rendered": Array [],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
