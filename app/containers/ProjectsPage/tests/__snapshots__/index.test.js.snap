// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProjectsPage /> Expect to render and match the snapshot 1`] = `
<React.Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Mijn projecten
    </title>
    <meta
      content="Mijn projecten pagina van Johan Meester zijn portfolio"
      name="description"
    />
  </HelmetWrapper>
  <PageContent
    content={
      <Projects
        projects={
          Array [
            Object {
              "article": "# Article for test case
          
          [add attributes to link](https://the.world/)
          ",
              "description": "Description for test case",
              "images": Array [
                Object {
                  "file": Object {
                    "fileName": "test-s.png",
                    "url": "/test-s.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-m.png",
                    "url": "/test-m.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-l.png",
                    "url": "/test-l.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-xl.png",
                    "url": "/test-xl.png",
                  },
                  "title": "Test image",
                },
              ],
              "title": "Title for test case",
            },
          ]
        }
      />
    }
    noSpeechBubble={true}
    title={
      <FormattedMessage
        defaultMessage="MY PROJECTS"
        id="portfolio.page.projects.title"
        values={Object {}}
      />
    }
  />
</React.Fragment>
`;

exports[`<ProjectsPage /> details page Should handle case where a non existent details page is requested 1`] = `
<React.Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Mijn projecten
    </title>
    <meta
      content="Mijn projecten pagina van Johan Meester zijn portfolio"
      name="description"
    />
  </HelmetWrapper>
  <PageContent
    content={
      <Projects
        projects={
          Array [
            Object {
              "article": "# Article for test case
          
          [add attributes to link](https://the.world/)
          ",
              "description": "Description for test case",
              "images": Array [
                Object {
                  "file": Object {
                    "fileName": "test-s.png",
                    "url": "/test-s.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-m.png",
                    "url": "/test-m.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-l.png",
                    "url": "/test-l.png",
                  },
                  "title": "Test image",
                },
                Object {
                  "file": Object {
                    "fileName": "test-xl.png",
                    "url": "/test-xl.png",
                  },
                  "title": "Test image",
                },
              ],
              "title": "Title for test case",
            },
          ]
        }
      />
    }
    noSpeechBubble={true}
    title={
      <FormattedMessage
        defaultMessage="MY PROJECTS"
        id="portfolio.page.projects.title"
        values={Object {}}
      />
    }
  />
</React.Fragment>
`;

exports[`<ProjectsPage /> details page Should render the details page when requested 1`] = `
<React.Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Mijn projecten
    </title>
    <meta
      content="Mijn projecten pagina van Johan Meester zijn portfolio"
      name="description"
    />
  </HelmetWrapper>
  <ProjectDetails
    project={
      Object {
        "article": "# Article for test case
      
      [add attributes to link](https://the.world/)
      ",
        "description": "Description for test case",
        "images": Array [
          Object {
            "file": Object {
              "fileName": "test-s.png",
              "url": "/test-s.png",
            },
            "title": "Test image",
          },
          Object {
            "file": Object {
              "fileName": "test-m.png",
              "url": "/test-m.png",
            },
            "title": "Test image",
          },
          Object {
            "file": Object {
              "fileName": "test-l.png",
              "url": "/test-l.png",
            },
            "title": "Test image",
          },
          Object {
            "file": Object {
              "fileName": "test-xl.png",
              "url": "/test-xl.png",
            },
            "title": "Test image",
          },
        ],
        "title": "Title for test case",
      }
    }
  />
</React.Fragment>
`;

exports[`<ProjectsPage /> fetching content from external source should handle case where no content is received 1`] = `
<React.Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Mijn projecten
    </title>
    <meta
      content="Mijn projecten pagina van Johan Meester zijn portfolio"
      name="description"
    />
  </HelmetWrapper>
  <React.Fragment />
</React.Fragment>
`;

exports[`<ProjectsPage /> fetching content from external source should show an error message when content could not be loaded 1`] = `
<React.Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Mijn projecten
    </title>
    <meta
      content="Mijn projecten pagina van Johan Meester zijn portfolio"
      name="description"
    />
  </HelmetWrapper>
  <ContentLoadingIndicator
    show={true}
    showError={true}
  />
</React.Fragment>
`;
