// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ContactPage /> should render and match the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <StyledArticle__StyledArticle>
    <HelmetWrapper
        encodeSpecialCharacters={true}
    >
        <title>
            Contact pagina
        </title>
        <meta
            content="Contact pagina van Johan Meester zijn portfolio"
            name="description"
        />
    </HelmetWrapper>
    <Styled(RowContainer)
        tagName="div"
    >
        <Breakpoints>
            <PageHeader
                isLeftHanded={true}
            >
                <FormattedMessage
                    defaultMessage="CONTACT ME"
                    id="portfolio.containers.ContactPage.header"
                    values={Object {}}
                />
            </PageHeader>
        </Breakpoints>
    </Styled(RowContainer)>
    <Styled(RowContainer)
        tagName="div"
    >
        <Breakpoints>
            <SpeechBubble>
                <Form__Form
                    onSubmit={[Function]}
                >
                    <div>
                        <div>
                            <FormInfo__FormInfo>
                                <FormInfoItemsList__FormInfoItemsList>
                                    <FormInfoItemsListItem>
                                        <FormattedMessage
                                            defaultMessage="Please fill in all fields"
                                            id="portfolio.containers.ContactPage.requirementOne"
                                            values={Object {}}
                                        />
                                    </FormInfoItemsListItem>
                                </FormInfoItemsList__FormInfoItemsList>
                            </FormInfo__FormInfo>
                            <div>
                                <FormInput
                                    helperText="Please provide a subject for your message."
                                    inputType="text"
                                    isTextArea={false}
                                    label="Subject"
                                    maxLength={50}
                                    minLength={3}
                                    name="subject"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value=""
                                />
                                <FormInput
                                    helperText="Please add your message here."
                                    inputType="text"
                                    isTextArea={true}
                                    label="Your message"
                                    maxLength={300}
                                    minLength={5}
                                    name="message"
                                    onChange={[Function]}
                                    validate={[Function]}
                                    value=""
                                />
                                <FormInput
                                    helperText="Please add your name here."
                                    inputType="text"
                                    isTextArea={false}
                                    label="Your name"
                                    maxLength={50}
                                    minLength={2}
                                    name="name"
                                    onChange={[Function]}
                                    placeholder="(e.g. John Doo)"
                                    validate={[Function]}
                                    value=""
                                />
                                <FormInput
                                    helperText="Please add your email address here."
                                    inputType="email"
                                    isTextArea={false}
                                    label="Your email address"
                                    name="email"
                                    onChange={[Function]}
                                    placeholder="(e.g. my@email.com)"
                                    validate={[Function]}
                                    value=""
                                />
                            </div>
                            <FormFooter__FormFooter />
                        </div>
                    </div>
                </Form__Form>
            </SpeechBubble>
        </Breakpoints>
    </Styled(RowContainer)>
</StyledArticle__StyledArticle>,
  "nodes": Array [
    <StyledArticle__StyledArticle>
      <HelmetWrapper
            encodeSpecialCharacters={true}
      >
            <title>
                  Contact pagina
            </title>
            <meta
                  content="Contact pagina van Johan Meester zijn portfolio"
                  name="description"
            />
      </HelmetWrapper>
      <Styled(RowContainer)
            tagName="div"
      >
            <Breakpoints>
                  <PageHeader
                        isLeftHanded={true}
                  >
                        <FormattedMessage
                              defaultMessage="CONTACT ME"
                              id="portfolio.containers.ContactPage.header"
                              values={Object {}}
                        />
                  </PageHeader>
            </Breakpoints>
      </Styled(RowContainer)>
      <Styled(RowContainer)
            tagName="div"
      >
            <Breakpoints>
                  <SpeechBubble>
                        <Form__Form
                              onSubmit={[Function]}
                        >
                              <div>
                                    <div>
                                          <FormInfo__FormInfo>
                                                <FormInfoItemsList__FormInfoItemsList>
                                                      <FormInfoItemsListItem>
                                                            <FormattedMessage
                                                                  defaultMessage="Please fill in all fields"
                                                                  id="portfolio.containers.ContactPage.requirementOne"
                                                                  values={Object {}}
                                                            />
                                                      </FormInfoItemsListItem>
                                                </FormInfoItemsList__FormInfoItemsList>
                                          </FormInfo__FormInfo>
                                          <div>
                                                <FormInput
                                                      helperText="Please provide a subject for your message."
                                                      inputType="text"
                                                      isTextArea={false}
                                                      label="Subject"
                                                      maxLength={50}
                                                      minLength={3}
                                                      name="subject"
                                                      onChange={[Function]}
                                                      validate={[Function]}
                                                      value=""
                                                />
                                                <FormInput
                                                      helperText="Please add your message here."
                                                      inputType="text"
                                                      isTextArea={true}
                                                      label="Your message"
                                                      maxLength={300}
                                                      minLength={5}
                                                      name="message"
                                                      onChange={[Function]}
                                                      validate={[Function]}
                                                      value=""
                                                />
                                                <FormInput
                                                      helperText="Please add your name here."
                                                      inputType="text"
                                                      isTextArea={false}
                                                      label="Your name"
                                                      maxLength={50}
                                                      minLength={2}
                                                      name="name"
                                                      onChange={[Function]}
                                                      placeholder="(e.g. John Doo)"
                                                      validate={[Function]}
                                                      value=""
                                                />
                                                <FormInput
                                                      helperText="Please add your email address here."
                                                      inputType="email"
                                                      isTextArea={false}
                                                      label="Your email address"
                                                      name="email"
                                                      onChange={[Function]}
                                                      placeholder="(e.g. my@email.com)"
                                                      validate={[Function]}
                                                      value=""
                                                />
                                          </div>
                                          <FormFooter__FormFooter />
                                    </div>
                              </div>
                        </Form__Form>
                  </SpeechBubble>
            </Breakpoints>
      </Styled(RowContainer)>
</StyledArticle__StyledArticle>,
  ],
  "options": Object {
    "context": Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "portfolio.components.FormInput.helperText.range": "Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}",
          "portfolio.components.FormInput.helperText.valid": "Thanks!",
          "portfolio.components.NotFoundPage.header": "This is NotFoundPage component!",
          "portfolio.components.SendButton.error": "Failed. Please try again",
          "portfolio.components.SendButton.idle": "Send",
          "portfolio.components.SendButton.sending": "Sending...",
          "portfolio.components.SendButton.success": "Sent! I'll respond as soon as possible",
          "portfolio.containers.ContactPage.emailError": "Your email address is required.",
          "portfolio.containers.ContactPage.emailLabel": "Your email address",
          "portfolio.containers.ContactPage.emailPlaceholder": "(e.g. my@email.com)",
          "portfolio.containers.ContactPage.emailText": "Please add your email address here.",
          "portfolio.containers.ContactPage.header": "CONTACT ME",
          "portfolio.containers.ContactPage.nameError": "Your name is required.",
          "portfolio.containers.ContactPage.nameLabel": "Your name",
          "portfolio.containers.ContactPage.namePlaceholder": "(e.g. John Doo)",
          "portfolio.containers.ContactPage.nameText": "Please add your name here.",
          "portfolio.containers.ContactPage.requirementOne": "Please fill in all fields",
          "portfolio.containers.ContactPage.subjectError": "A subject is required.",
          "portfolio.containers.ContactPage.subjectLabel": "Subject",
          "portfolio.containers.ContactPage.subjectText": "Please provide a subject for your message.",
          "portfolio.containers.ContactPage.yourMessageError": "A message is required.",
          "portfolio.containers.ContactPage.yourMessageLabel": "Your message",
          "portfolio.containers.ContactPage.yourMessageText": "Please add your message here.",
          "portfolio.containers.LocaleToggle.dutch": "Nederlands",
          "portfolio.containers.LocaleToggle.en": "English",
          "portfolio.containers.LocaleToggle.english": "English",
          "portfolio.containers.LocaleToggle.nl": "Nederlands",
          "portfolio.containers.LocaleToggle.title": "Language selection menu",
          "portfolio.nav.about": "About",
          "portfolio.nav.contact": "Contact",
          "portfolio.nav.header": "Site navigation",
          "portfolio.nav.home": "Intro",
          "portfolio.nav.projects": "Projects",
          "portfolio.nav.skills": "Skills",
          "portfolio.page.AboutPage.pageDescription": "A short description about me.",
          "portfolio.page.AboutPage.pageTitle": "About me : Johan Meester's portfolio",
          "portfolio.page.AboutPage.title": "ABOUT ME",
          "portfolio.page.SkillsPage.pageDescription": "Some of my skills.",
          "portfolio.page.SkillsPage.pageTitle": "My Skills : Johan Meester's portfolio",
          "portfolio.page.SkillsPage.title": "MY SKILLS",
          "portfolio.page.index.header.greeting": "WELCOME",
          "portfolio.page.index.header.intro": "I am {name}",
          "portfolio.page.index.header.trade": "FRONT-END DEVELOPER",
          "portfolio.page.index.title": "Introduction",
          "portfolio.page.projects.title": "MY PROJECTS",
          "portfolio.social_links.header": "Also find me on:",
          "portfolio.title": "Welcome to my portfolio",
        },
        "now": [Function],
        "textComponent": "span",
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "intl": Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": Object {
            "portfolio.components.FormInput.helperText.range": "Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}",
            "portfolio.components.FormInput.helperText.valid": "Thanks!",
            "portfolio.components.NotFoundPage.header": "This is NotFoundPage component!",
            "portfolio.components.SendButton.error": "Failed. Please try again",
            "portfolio.components.SendButton.idle": "Send",
            "portfolio.components.SendButton.sending": "Sending...",
            "portfolio.components.SendButton.success": "Sent! I'll respond as soon as possible",
            "portfolio.containers.ContactPage.emailError": "Your email address is required.",
            "portfolio.containers.ContactPage.emailLabel": "Your email address",
            "portfolio.containers.ContactPage.emailPlaceholder": "(e.g. my@email.com)",
            "portfolio.containers.ContactPage.emailText": "Please add your email address here.",
            "portfolio.containers.ContactPage.header": "CONTACT ME",
            "portfolio.containers.ContactPage.nameError": "Your name is required.",
            "portfolio.containers.ContactPage.nameLabel": "Your name",
            "portfolio.containers.ContactPage.namePlaceholder": "(e.g. John Doo)",
            "portfolio.containers.ContactPage.nameText": "Please add your name here.",
            "portfolio.containers.ContactPage.requirementOne": "Please fill in all fields",
            "portfolio.containers.ContactPage.subjectError": "A subject is required.",
            "portfolio.containers.ContactPage.subjectLabel": "Subject",
            "portfolio.containers.ContactPage.subjectText": "Please provide a subject for your message.",
            "portfolio.containers.ContactPage.yourMessageError": "A message is required.",
            "portfolio.containers.ContactPage.yourMessageLabel": "Your message",
            "portfolio.containers.ContactPage.yourMessageText": "Please add your message here.",
            "portfolio.containers.LocaleToggle.dutch": "Nederlands",
            "portfolio.containers.LocaleToggle.en": "English",
            "portfolio.containers.LocaleToggle.english": "English",
            "portfolio.containers.LocaleToggle.nl": "Nederlands",
            "portfolio.containers.LocaleToggle.title": "Language selection menu",
            "portfolio.nav.about": "About",
            "portfolio.nav.contact": "Contact",
            "portfolio.nav.header": "Site navigation",
            "portfolio.nav.home": "Intro",
            "portfolio.nav.projects": "Projects",
            "portfolio.nav.skills": "Skills",
            "portfolio.page.AboutPage.pageDescription": "A short description about me.",
            "portfolio.page.AboutPage.pageTitle": "About me : Johan Meester's portfolio",
            "portfolio.page.AboutPage.title": "ABOUT ME",
            "portfolio.page.SkillsPage.pageDescription": "Some of my skills.",
            "portfolio.page.SkillsPage.pageTitle": "My Skills : Johan Meester's portfolio",
            "portfolio.page.SkillsPage.title": "MY SKILLS",
            "portfolio.page.index.header.greeting": "WELCOME",
            "portfolio.page.index.header.intro": "I am {name}",
            "portfolio.page.index.header.trade": "FRONT-END DEVELOPER",
            "portfolio.page.index.title": "Introduction",
            "portfolio.page.projects.title": "MY PROJECTS",
            "portfolio.social_links.header": "Also find me on:",
            "portfolio.title": "Welcome to my portfolio",
          },
          "now": [Function],
          "textComponent": "span",
        },
      },
      "_currentElement": <ContactPage
        intl={
                Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "portfolio.components.FormInput.helperText.range": "Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}",
                          "portfolio.components.FormInput.helperText.valid": "Thanks!",
                          "portfolio.components.NotFoundPage.header": "This is NotFoundPage component!",
                          "portfolio.components.SendButton.error": "Failed. Please try again",
                          "portfolio.components.SendButton.idle": "Send",
                          "portfolio.components.SendButton.sending": "Sending...",
                          "portfolio.components.SendButton.success": "Sent! I'll respond as soon as possible",
                          "portfolio.containers.ContactPage.emailError": "Your email address is required.",
                          "portfolio.containers.ContactPage.emailLabel": "Your email address",
                          "portfolio.containers.ContactPage.emailPlaceholder": "(e.g. my@email.com)",
                          "portfolio.containers.ContactPage.emailText": "Please add your email address here.",
                          "portfolio.containers.ContactPage.header": "CONTACT ME",
                          "portfolio.containers.ContactPage.nameError": "Your name is required.",
                          "portfolio.containers.ContactPage.nameLabel": "Your name",
                          "portfolio.containers.ContactPage.namePlaceholder": "(e.g. John Doo)",
                          "portfolio.containers.ContactPage.nameText": "Please add your name here.",
                          "portfolio.containers.ContactPage.requirementOne": "Please fill in all fields",
                          "portfolio.containers.ContactPage.subjectError": "A subject is required.",
                          "portfolio.containers.ContactPage.subjectLabel": "Subject",
                          "portfolio.containers.ContactPage.subjectText": "Please provide a subject for your message.",
                          "portfolio.containers.ContactPage.yourMessageError": "A message is required.",
                          "portfolio.containers.ContactPage.yourMessageLabel": "Your message",
                          "portfolio.containers.ContactPage.yourMessageText": "Please add your message here.",
                          "portfolio.containers.LocaleToggle.dutch": "Nederlands",
                          "portfolio.containers.LocaleToggle.en": "English",
                          "portfolio.containers.LocaleToggle.english": "English",
                          "portfolio.containers.LocaleToggle.nl": "Nederlands",
                          "portfolio.containers.LocaleToggle.title": "Language selection menu",
                          "portfolio.nav.about": "About",
                          "portfolio.nav.contact": "Contact",
                          "portfolio.nav.header": "Site navigation",
                          "portfolio.nav.home": "Intro",
                          "portfolio.nav.projects": "Projects",
                          "portfolio.nav.skills": "Skills",
                          "portfolio.page.AboutPage.pageDescription": "A short description about me.",
                          "portfolio.page.AboutPage.pageTitle": "About me : Johan Meester's portfolio",
                          "portfolio.page.AboutPage.title": "ABOUT ME",
                          "portfolio.page.SkillsPage.pageDescription": "Some of my skills.",
                          "portfolio.page.SkillsPage.pageTitle": "My Skills : Johan Meester's portfolio",
                          "portfolio.page.SkillsPage.title": "MY SKILLS",
                          "portfolio.page.index.header.greeting": "WELCOME",
                          "portfolio.page.index.header.intro": "I am {name}",
                          "portfolio.page.index.header.trade": "FRONT-END DEVELOPER",
                          "portfolio.page.index.title": "Introduction",
                          "portfolio.page.projects.title": "MY PROJECTS",
                          "portfolio.social_links.header": "Also find me on:",
                          "portfolio.title": "Welcome to my portfolio",
                        },
                        "now": [Function],
                        "textComponent": "span",
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ContactPage {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "onFormSubmit": [Function],
        "onInputChange": [Function],
        "props": Object {
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "portfolio.components.FormInput.helperText.range": "Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}",
              "portfolio.components.FormInput.helperText.valid": "Thanks!",
              "portfolio.components.NotFoundPage.header": "This is NotFoundPage component!",
              "portfolio.components.SendButton.error": "Failed. Please try again",
              "portfolio.components.SendButton.idle": "Send",
              "portfolio.components.SendButton.sending": "Sending...",
              "portfolio.components.SendButton.success": "Sent! I'll respond as soon as possible",
              "portfolio.containers.ContactPage.emailError": "Your email address is required.",
              "portfolio.containers.ContactPage.emailLabel": "Your email address",
              "portfolio.containers.ContactPage.emailPlaceholder": "(e.g. my@email.com)",
              "portfolio.containers.ContactPage.emailText": "Please add your email address here.",
              "portfolio.containers.ContactPage.header": "CONTACT ME",
              "portfolio.containers.ContactPage.nameError": "Your name is required.",
              "portfolio.containers.ContactPage.nameLabel": "Your name",
              "portfolio.containers.ContactPage.namePlaceholder": "(e.g. John Doo)",
              "portfolio.containers.ContactPage.nameText": "Please add your name here.",
              "portfolio.containers.ContactPage.requirementOne": "Please fill in all fields",
              "portfolio.containers.ContactPage.subjectError": "A subject is required.",
              "portfolio.containers.ContactPage.subjectLabel": "Subject",
              "portfolio.containers.ContactPage.subjectText": "Please provide a subject for your message.",
              "portfolio.containers.ContactPage.yourMessageError": "A message is required.",
              "portfolio.containers.ContactPage.yourMessageLabel": "Your message",
              "portfolio.containers.ContactPage.yourMessageText": "Please add your message here.",
              "portfolio.containers.LocaleToggle.dutch": "Nederlands",
              "portfolio.containers.LocaleToggle.en": "English",
              "portfolio.containers.LocaleToggle.english": "English",
              "portfolio.containers.LocaleToggle.nl": "Nederlands",
              "portfolio.containers.LocaleToggle.title": "Language selection menu",
              "portfolio.nav.about": "About",
              "portfolio.nav.contact": "Contact",
              "portfolio.nav.header": "Site navigation",
              "portfolio.nav.home": "Intro",
              "portfolio.nav.projects": "Projects",
              "portfolio.nav.skills": "Skills",
              "portfolio.page.AboutPage.pageDescription": "A short description about me.",
              "portfolio.page.AboutPage.pageTitle": "About me : Johan Meester's portfolio",
              "portfolio.page.AboutPage.title": "ABOUT ME",
              "portfolio.page.SkillsPage.pageDescription": "Some of my skills.",
              "portfolio.page.SkillsPage.pageTitle": "My Skills : Johan Meester's portfolio",
              "portfolio.page.SkillsPage.title": "MY SKILLS",
              "portfolio.page.index.header.greeting": "WELCOME",
              "portfolio.page.index.header.intro": "I am {name}",
              "portfolio.page.index.header.trade": "FRONT-END DEVELOPER",
              "portfolio.page.index.title": "Introduction",
              "portfolio.page.projects.title": "MY PROJECTS",
              "portfolio.social_links.header": "Also find me on:",
              "portfolio.title": "Welcome to my portfolio",
            },
            "now": [Function],
            "textComponent": "span",
          },
        },
        "refs": Object {},
        "state": Object {
          "field": Object {
            "email": "",
            "message": "",
            "name": "",
            "subject": "",
          },
          "fieldError": Object {},
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
        "validateForm": [Function],
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <StyledArticle__StyledArticle>
          <HelmetWrapper
                    encodeSpecialCharacters={true}
          >
                    <title>
                              Contact pagina
                    </title>
                    <meta
                              content="Contact pagina van Johan Meester zijn portfolio"
                              name="description"
                    />
          </HelmetWrapper>
          <Styled(RowContainer)
                    tagName="div"
          >
                    <Breakpoints>
                              <PageHeader
                                        isLeftHanded={true}
                              >
                                        <FormattedMessage
                                                  defaultMessage="CONTACT ME"
                                                  id="portfolio.containers.ContactPage.header"
                                                  values={Object {}}
                                        />
                              </PageHeader>
                    </Breakpoints>
          </Styled(RowContainer)>
          <Styled(RowContainer)
                    tagName="div"
          >
                    <Breakpoints>
                              <SpeechBubble>
                                        <Form__Form
                                                  onSubmit={[Function]}
                                        >
                                                  <div>
                                                            <div>
                                                                      <FormInfo__FormInfo>
                                                                                <FormInfoItemsList__FormInfoItemsList>
                                                                                          <FormInfoItemsListItem>
                                                                                                    <FormattedMessage
                                                                                                              defaultMessage="Please fill in all fields"
                                                                                                              id="portfolio.containers.ContactPage.requirementOne"
                                                                                                              values={Object {}}
                                                                                                    />
                                                                                          </FormInfoItemsListItem>
                                                                                </FormInfoItemsList__FormInfoItemsList>
                                                                      </FormInfo__FormInfo>
                                                                      <div>
                                                                                <FormInput
                                                                                          helperText="Please provide a subject for your message."
                                                                                          inputType="text"
                                                                                          isTextArea={false}
                                                                                          label="Subject"
                                                                                          maxLength={50}
                                                                                          minLength={3}
                                                                                          name="subject"
                                                                                          onChange={[Function]}
                                                                                          validate={[Function]}
                                                                                          value=""
                                                                                />
                                                                                <FormInput
                                                                                          helperText="Please add your message here."
                                                                                          inputType="text"
                                                                                          isTextArea={true}
                                                                                          label="Your message"
                                                                                          maxLength={300}
                                                                                          minLength={5}
                                                                                          name="message"
                                                                                          onChange={[Function]}
                                                                                          validate={[Function]}
                                                                                          value=""
                                                                                />
                                                                                <FormInput
                                                                                          helperText="Please add your name here."
                                                                                          inputType="text"
                                                                                          isTextArea={false}
                                                                                          label="Your name"
                                                                                          maxLength={50}
                                                                                          minLength={2}
                                                                                          name="name"
                                                                                          onChange={[Function]}
                                                                                          placeholder="(e.g. John Doo)"
                                                                                          validate={[Function]}
                                                                                          value=""
                                                                                />
                                                                                <FormInput
                                                                                          helperText="Please add your email address here."
                                                                                          inputType="email"
                                                                                          isTextArea={false}
                                                                                          label="Your email address"
                                                                                          name="email"
                                                                                          onChange={[Function]}
                                                                                          placeholder="(e.g. my@email.com)"
                                                                                          validate={[Function]}
                                                                                          value=""
                                                                                />
                                                                      </div>
                                                                      <FormFooter__FormFooter />
                                                            </div>
                                                  </div>
                                        </Form__Form>
                              </SpeechBubble>
                    </Breakpoints>
          </Styled(RowContainer)>
</StyledArticle__StyledArticle>,
        "_debugID": 2,
        "_renderedOutput": <StyledArticle__StyledArticle>
          <HelmetWrapper
                    encodeSpecialCharacters={true}
          >
                    <title>
                              Contact pagina
                    </title>
                    <meta
                              content="Contact pagina van Johan Meester zijn portfolio"
                              name="description"
                    />
          </HelmetWrapper>
          <Styled(RowContainer)
                    tagName="div"
          >
                    <Breakpoints>
                              <PageHeader
                                        isLeftHanded={true}
                              >
                                        <FormattedMessage
                                                  defaultMessage="CONTACT ME"
                                                  id="portfolio.containers.ContactPage.header"
                                                  values={Object {}}
                                        />
                              </PageHeader>
                    </Breakpoints>
          </Styled(RowContainer)>
          <Styled(RowContainer)
                    tagName="div"
          >
                    <Breakpoints>
                              <SpeechBubble>
                                        <Form__Form
                                                  onSubmit={[Function]}
                                        >
                                                  <div>
                                                            <div>
                                                                      <FormInfo__FormInfo>
                                                                                <FormInfoItemsList__FormInfoItemsList>
                                                                                          <FormInfoItemsListItem>
                                                                                                    <FormattedMessage
                                                                                                              defaultMessage="Please fill in all fields"
                                                                                                              id="portfolio.containers.ContactPage.requirementOne"
                                                                                                              values={Object {}}
                                                                                                    />
                                                                                          </FormInfoItemsListItem>
                                                                                </FormInfoItemsList__FormInfoItemsList>
                                                                      </FormInfo__FormInfo>
                                                                      <div>
                                                                                <FormInput
                                                                                          helperText="Please provide a subject for your message."
                                                                                          inputType="text"
                                                                                          isTextArea={false}
                                                                                          label="Subject"
                                                                                          maxLength={50}
                                                                                          minLength={3}
                                                                                          name="subject"
                                                                                          onChange={[Function]}
                                                                                          validate={[Function]}
                                                                                          value=""
                                                                                />
                                                                                <FormInput
                                                                                          helperText="Please add your message here."
                                                                                          inputType="text"
                                                                                          isTextArea={true}
                                                                                          label="Your message"
                                                                                          maxLength={300}
                                                                                          minLength={5}
                                                                                          name="message"
                                                                                          onChange={[Function]}
                                                                                          validate={[Function]}
                                                                                          value=""
                                                                                />
                                                                                <FormInput
                                                                                          helperText="Please add your name here."
                                                                                          inputType="text"
                                                                                          isTextArea={false}
                                                                                          label="Your name"
                                                                                          maxLength={50}
                                                                                          minLength={2}
                                                                                          name="name"
                                                                                          onChange={[Function]}
                                                                                          placeholder="(e.g. John Doo)"
                                                                                          validate={[Function]}
                                                                                          value=""
                                                                                />
                                                                                <FormInput
                                                                                          helperText="Please add your email address here."
                                                                                          inputType="email"
                                                                                          isTextArea={false}
                                                                                          label="Your email address"
                                                                                          name="email"
                                                                                          onChange={[Function]}
                                                                                          placeholder="(e.g. my@email.com)"
                                                                                          validate={[Function]}
                                                                                          value=""
                                                                                />
                                                                      </div>
                                                                      <FormFooter__FormFooter />
                                                            </div>
                                                  </div>
                                        </Form__Form>
                              </SpeechBubble>
                    </Breakpoints>
          </Styled(RowContainer)>
</StyledArticle__StyledArticle>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ContactPage
    intl={
        Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "portfolio.components.FormInput.helperText.range": "Should be between {minLength, number} and {maxLength, number} characters. Is now: {count, number}",
              "portfolio.components.FormInput.helperText.valid": "Thanks!",
              "portfolio.components.NotFoundPage.header": "This is NotFoundPage component!",
              "portfolio.components.SendButton.error": "Failed. Please try again",
              "portfolio.components.SendButton.idle": "Send",
              "portfolio.components.SendButton.sending": "Sending...",
              "portfolio.components.SendButton.success": "Sent! I'll respond as soon as possible",
              "portfolio.containers.ContactPage.emailError": "Your email address is required.",
              "portfolio.containers.ContactPage.emailLabel": "Your email address",
              "portfolio.containers.ContactPage.emailPlaceholder": "(e.g. my@email.com)",
              "portfolio.containers.ContactPage.emailText": "Please add your email address here.",
              "portfolio.containers.ContactPage.header": "CONTACT ME",
              "portfolio.containers.ContactPage.nameError": "Your name is required.",
              "portfolio.containers.ContactPage.nameLabel": "Your name",
              "portfolio.containers.ContactPage.namePlaceholder": "(e.g. John Doo)",
              "portfolio.containers.ContactPage.nameText": "Please add your name here.",
              "portfolio.containers.ContactPage.requirementOne": "Please fill in all fields",
              "portfolio.containers.ContactPage.subjectError": "A subject is required.",
              "portfolio.containers.ContactPage.subjectLabel": "Subject",
              "portfolio.containers.ContactPage.subjectText": "Please provide a subject for your message.",
              "portfolio.containers.ContactPage.yourMessageError": "A message is required.",
              "portfolio.containers.ContactPage.yourMessageLabel": "Your message",
              "portfolio.containers.ContactPage.yourMessageText": "Please add your message here.",
              "portfolio.containers.LocaleToggle.dutch": "Nederlands",
              "portfolio.containers.LocaleToggle.en": "English",
              "portfolio.containers.LocaleToggle.english": "English",
              "portfolio.containers.LocaleToggle.nl": "Nederlands",
              "portfolio.containers.LocaleToggle.title": "Language selection menu",
              "portfolio.nav.about": "About",
              "portfolio.nav.contact": "Contact",
              "portfolio.nav.header": "Site navigation",
              "portfolio.nav.home": "Intro",
              "portfolio.nav.projects": "Projects",
              "portfolio.nav.skills": "Skills",
              "portfolio.page.AboutPage.pageDescription": "A short description about me.",
              "portfolio.page.AboutPage.pageTitle": "About me : Johan Meester's portfolio",
              "portfolio.page.AboutPage.title": "ABOUT ME",
              "portfolio.page.SkillsPage.pageDescription": "Some of my skills.",
              "portfolio.page.SkillsPage.pageTitle": "My Skills : Johan Meester's portfolio",
              "portfolio.page.SkillsPage.title": "MY SKILLS",
              "portfolio.page.index.header.greeting": "WELCOME",
              "portfolio.page.index.header.intro": "I am {name}",
              "portfolio.page.index.header.trade": "FRONT-END DEVELOPER",
              "portfolio.page.index.title": "Introduction",
              "portfolio.page.projects.title": "MY PROJECTS",
              "portfolio.social_links.header": "Also find me on:",
              "portfolio.title": "Welcome to my portfolio",
            },
            "now": [Function],
            "textComponent": "span",
          }
    }
/>,
}
`;
